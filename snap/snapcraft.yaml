name: edgex-core-snap
version: '0.2.0+barca'
summary: Provides a full set of Edgex Foundry core microservices.
description: |
 This snap provides a full set of Edgxe Foundry core microservices,
 This snap is currently based on the 'Barcalona' release of EdgeX,
 where most of core microservices are written in Java.  The notable
 exception is consul, which is the core configuration microservice.
 This snap includes a shared Zulu JRE and Go runtime, as consul
 requires a later version of Go than that provided by Ubuntu 16.04 LTS.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots

apps:
  consul:
    command: bin/start-consul.sh
    daemon: simple
    # TODO: add stop-command
  core-config-seed:
    command: bin/start-config-seed.sh
  consul-cli:
    command: bin/consul

parts:
  # This part and its associated plugin were taken from the docker snap:
  #
  # https://github.com/docker/docker-snap
  go:
    plugin: gobuild
    source: https://storage.googleapis.com/golang/go1.9.2.src.tar.gz
    # source: ./go1.9.2.src.tar.gz
    source-type: tar
    # NOTE - both the jre & go install LICENSE to root-dir of the snap
    # which breaks when 'stage' runs.  The only workaround so far is
    # is to not stage these files.  This needs a better solution long-term.
    stage:
      - -LICENSE
    prime:
      - -*
    build-packages:
      - golang-go
      - rsync
      - build-essential
      - netbase
      - python3-pyelftools

  # This part and its associated plugin (x-zulu-jre.py) were taken from
  # the openhab snap:
  #
  # https://github.com/kubiko/openhab-snap
  jre:
    plugin: zulu-jre
    # zulu supported architectures(armhf, arm64,  amd64) are already handled by plugin itself
    # define here overide for pluging's defaults, or to add additional architectures
    # example overide:
    # zulu:
    #     amd64: https://www.azul.com/downloads/zulu/zdk-8-ga-linux_x64.tar.gz

  consul:
    plugin: shell
    source: git@github.com:hashicorp/consul.git
    # source: ./consul
    source-tag: v0.7.3
    prepare: git apply $SNAPCRAFT_STAGE/0001-Link-all-dependencies-in-vendor-folder-to-the-custom.patch
    shell: bash
    shell-flags: ['-eux', '-o', 'pipefail']
    shell-command: |
      export GOROOT="$SNAPDIR/parts/go/install"
      export PATH="$GOROOT/bin:$PATH"

      export XC_ARCH="amd64"
      export XC_OS="linux"

      go version

      mkdir -p .gopath/src/github.com/hashicorp
      export GOPATH="$PWD/.gopath"
      export PATH="$GOPATH/bin:$PATH"
      ln -s "$PWD" .gopath/src/github.com/hashicorp/consul

      pushd .gopath/src/github.com/hashicorp/consul
      make bin
      popd

      consulBin='.gopath/src/github.com/hashicorp/consul/pkg/linux_amd64/consul'
      "$consulBin" -v
      install -d "$SNAPCRAFT_PART_INSTALL/bin"
      install -T "$(readlink -f "$consulBin")" "$SNAPCRAFT_PART_INSTALL/bin/consul"
    after:
      - go
      - patch
    build-packages:
      - make
  patch:
    source: patches
    plugin: dump
    prime:
      - -*
  config-seed:
    source: git@github.com:edgexfoundry/core-config-seed.git
    source-branch: barcelona
    plugin: maven
    install: |
      echo "Installing config files"

      # The logic following logic is all handled by DockerFile for
      # the EdgeX core-config-seed docker image.
      install -d "$SNAPCRAFT_PART_INSTALL/jar/config-seed"
      mv "$SNAPCRAFT_PART_INSTALL/jar/core-config-seed-0.2.1-SNAPSHOT.jar" \
         "$SNAPCRAFT_PART_INSTALL/jar/config-seed/core-config-seed.jar"

      install -d "$SNAPCRAFT_PART_INSTALL/jar/config-seed/config"
      for i in `ls ./config`; do
        install -d "$SNAPCRAFT_PART_INSTALL/jar/config-seed/config/$i"; done
      for i in `ls ./config`; do
        cp "./config/$i/application.properties" \
           "$SNAPCRAFT_PART_INSTALL/jar/config-seed/config/$i/"; done
      cp "./docker-files/application.properties" "$SNAPCRAFT_PART_INSTALL/jar/config-seed"
    build-packages:
      - ca-certificates-java
  config-common:
    plugin: dump
    source: .
    stage:
      - bin/start-consul.sh
      - bin/start-config-seed.sh      
  curl:
    configflags:
    - --enable-static
    - --enable-shared
    - --disable-manual
    plugin: autotools
    source: http://curl.haxx.se/download/curl-7.44.0.tar.bz2
    source-type: tar
    stage-packages:
      - coreutils
    prime:
    - -lib/*.a
    - -lib/pkgconfig
    - -lib/*.la
    - -usr/share
    - -usr/sbin/chroot
    - -usr/lib
    - -include
    - -share
